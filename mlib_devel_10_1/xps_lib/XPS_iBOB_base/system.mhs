# ##############################################################################
# Target Board:  IBOB
# Family:	 virtex2p
# Device:	 xc2vp50
# Package:	 ff1152
# Speed Grade:	 -7
# Processor: PPC 405
# Processor clock frequency: 100.000000 MHz
# Bus clock frequency: 100.000000 MHz
# Debug interface: FPGA JTAG
# On Chip Memory : 64 KB
# ##############################################################################

 PARAMETER VERSION = 2.1.0

#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#PORT brefclk_top_p     = brefclk_top_p,     DIR = I
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#PORT brefclk_top_m     = brefclk_top_m,     DIR = I
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#PORT brefclk_bottom_p  = brefclk_bottom_p,  DIR = I
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#PORT brefclk_bottom_m  = brefclk_bottom_m,  DIR = I
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')#PORT bref_clk_top_p = bref_clk_top_p, DIR = I
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')#PORT bref_clk_top_n = bref_clk_top_n, DIR = I
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')#PORT bref_clk_bottom_p = bref_clk_bottom_p, DIR = I
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')#PORT bref_clk_bottom_n = bref_clk_bottom_n, DIR = I
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#PORT adc0_adc3wire_clk = adc0_adc3wire_clk, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#PORT adc0_adc3wire_data = adc0_adc3wire_data, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#PORT adc0_adc3wire_strobe = adc0_adc3wire_strobe, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')#PORT adc0_modepin = adc0_modepin, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#PORT adc1_adc3wire_clk = adc1_adc3wire_clk, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#PORT adc1_adc3wire_data = adc1_adc3wire_data, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#PORT adc1_adc3wire_strobe = adc1_adc3wire_strobe, DIR = O
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')#PORT adc1_modepin = adc1_modepin, DIR = O

#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_serialswitch
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_serialswitch_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER   = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0002300
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe00023ff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rx   = rs232_rx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT tx   = rs232_tx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rts  = rs232_rtsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT cts  = rs232_ctsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rx1  = rs232tsh_rx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT tx1  = rs232tsh_tx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rts1 = net_vcc
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rx2  = rs232linux_rx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT tx2  = rs232linux_tx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT cts2 = rs232linux_ctsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rts2 = rs232linux_rtsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT switch = switch
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT rs232_ctsN = rs232_ctsN, DIR = IN
PORT rs232_rtsN = net_vcc,     DIR = O #IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT rs232_rtsN = rs232_rtsN, DIR = OUT
PORT rs232_rx   = rs232tsh_rx, DIR = I #IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT rs232_rx   = rs232_rx,   DIR = IN
PORT rs232_tx   = rs232tsh_tx, DIR = O #IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT rs232_tx   = rs232_tx,   DIR = OUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_selectmap_fifo
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_selectmap_fifo_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.01.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xd0fffe00
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xd0ffffff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = opb0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT D_O = SELECTMAP_D_O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT D_I = SELECTMAP_D_I
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT RDWR_B = SELECTMAP_RDWR_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT CS_B = SELECTMAP_CS_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT INIT_B = SELECTMAP_INIT_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_getswitch
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_getswitch_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xd0fffd00
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xd0fffdff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = opb0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT switch = switch
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
BEGIN proc_sys_reset
 PARAMETER INSTANCE = reset_block
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_EXT_RESET_HIGH = 0
 PORT Ext_Reset_In = sys_rst_s
 PORT Slowest_sync_clk = sys_clk
 PORT Chip_Reset_Req = C405RSTCHIPRESETREQ
 PORT Core_Reset_Req = C405RSTCORERESETREQ
 PORT System_Reset_Req = C405RSTSYSRESETREQ
 PORT Rstc405resetchip = RSTC405RESETCHIP
 PORT Rstc405resetcore = RSTC405RESETCORE
 PORT Rstc405resetsys = RSTC405RESETSYS
 PORT Bus_Struct_Reset = sys_bus_reset
 PORT Dcm_locked = dcm_0_lock
END
PORT reset_n = sys_rst_s, DIR = IN

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_0
 PARAMETER HW_VER = 1.00.d
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 10.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 1
 PARAMETER C_CLK2X_BUF = TRUE
 PARAMETER C_CLKFX_DIVIDE = 1
 PARAMETER C_CLKFX_MULTIPLY = 3
 PARAMETER C_CLK90_BUF = TRUE
 PARAMETER C_DFS_FREQUENCY_MODE = HIGH
 PORT CLKIN = dcm_clk_s
 PORT CLK0 = sys_clk
 PORT CLKFB = sys_clk
 PORT RST = net_gnd
 PORT LOCKED = dcm_0_lock
 PORT CLK2X = sys_clk2x_dcm
 PORT CLK90 = sys_clk90
 PORT CLKFX = sys_clk3x
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_1
 PARAMETER HW_VER = 1.00.d
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 5.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 0
 PARAMETER C_CLK90_BUF = TRUE
 PORT CLKIN = sys_clk2x_dcm
 PORT CLK0 = sys_clk2x
 PORT CLKFB = sys_clk2x
 PORT RST = dcm_0_lock
 PORT CLK90 = sys_clk2x90
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_2
 PARAMETER HW_VER = 1.00.d
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 10.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 1
 PARAMETER C_CLK2X_BUF = TRUE
 PARAMETER C_CLK90_BUF = TRUE
 PARAMETER C_CLKOUT_PHASE_SHIFT = VARIABLE
 PORT CLKIN = net_gnd #IF# strcmp(hw_sys, 'iBOB') && ~isempty(strmatch('usr_clk', app_clk))# PORT CLKIN = usrclk_in
 PORT CLK0 = usr_clk
 PORT CLKFB = usr_clk
 PORT RST = usrclk_reset
 PORT PSCLK = usrclk_psclk
 PORT PSEN = usrclk_psen
 PORT PSINCDEC = usrclk_psincdec
 PORT LOCKED = dcm_2_lock
 PORT CLK2X = usr_clk2x_dcm
 PORT CLK90 = usr_clk90
END

BEGIN dcm_module
 PARAMETER INSTANCE = dcm_3
 PARAMETER HW_VER = 1.00.d
 PARAMETER C_CLK0_BUF = TRUE
 PARAMETER C_CLKIN_PERIOD = 5.000000
 PARAMETER C_CLK_FEEDBACK = 1X
 PARAMETER C_EXT_RESET_HIGH = 0
 PARAMETER C_CLK90_BUF = TRUE
 PORT CLKIN = usr_clk2x_dcm
 PORT CLK0 = usr_clk2x
 PORT CLKFB = usr_clk2x
 PORT RST = dcm_2_lock
 PORT CLK90 = usr_clk2x90
END

BEGIN ppc405
 PARAMETER INSTANCE = ppc405_1
 PARAMETER HW_VER = 2.00.c
 BUS_INTERFACE JTAGPPC = jtagppc_0_1
 BUS_INTERFACE DPLB = plb
 BUS_INTERFACE IPLB = plb
 PORT PLBCLK = sys_clk
 PORT C405RSTCHIPRESETREQ = C405RSTCHIPRESETREQ
 PORT C405RSTCORERESETREQ = C405RSTCORERESETREQ
 PORT C405RSTSYSRESETREQ = C405RSTSYSRESETREQ
 PORT RSTC405RESETCHIP = RSTC405RESETCHIP
 PORT RSTC405RESETCORE = RSTC405RESETCORE
 PORT RSTC405RESETSYS = RSTC405RESETSYS
 PORT CPMC405CLOCK = sys_clk
END

BEGIN jtagppc_cntlr
 PARAMETER INSTANCE = jtagppc_0
 PARAMETER HW_VER = 2.00.a
 BUS_INTERFACE JTAGPPC0 = jtagppc_0_0
 BUS_INTERFACE JTAGPPC1 = jtagppc_0_1
END

BEGIN bram_block
 PARAMETER INSTANCE = plb_bram_if_cntlr_1_bram
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = plb_bram
END

BEGIN plb_bram_if_cntlr
 PARAMETER INSTANCE = plb_bram_if_cntlr_1
 PARAMETER HW_VER = 1.00.b
 PARAMETER c_plb_clk_period_ps = 10000
 PARAMETER c_baseaddr = 0xffff0000
 PARAMETER c_highaddr = 0xffffffff
 BUS_INTERFACE PORTA = plb_bram
 BUS_INTERFACE SPLB = plb
 PORT PLB_Clk = sys_clk
END

BEGIN plb2opb_bridge
 PARAMETER INSTANCE = plb2opb_bridge_0
 PARAMETER HW_VER = 1.01.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_NUM_ADDR_RNG = 1
 PARAMETER C_RNG0_BASEADDR = 0xd0000000
 PARAMETER C_RNG0_HIGHADDR = 0xd0ffffff
 BUS_INTERFACE SPLB = plb
 BUS_INTERFACE MOPB = opb0
 PORT PLB_Clk = sys_clk
 PORT OPB_Clk = sys_clk
END

BEGIN plb_v34
 PARAMETER INSTANCE = plb
 PARAMETER HW_VER = 1.02.a
 PARAMETER C_DCR_INTFCE = 0
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset
 PORT PLB_Clk = sys_clk
END

BEGIN opb_v20
 PARAMETER INSTANCE = opb0
 PARAMETER HW_VER = 1.10.c
 PARAMETER C_EXT_RESET_HIGH = 1
 PORT SYS_Rst = sys_bus_reset
 PORT OPB_Clk = sys_clk
END

BEGIN diffclk_buf
 PARAMETER INSTANCE = diffclk_buf_0
 PARAMETER HW_VER = 1.01.a
 PORT Clkin_p = sysclk_p
 PORT Clkin_m = sysclk_m
 PORT Clkout = dcm_clk_s
END
PORT sysclk_p = sysclk_p, DIR = IN, SIGIS = CLK, CLK_FREQ = 100000000
PORT sysclk_m = sysclk_m, DIR = IN, SIGIS = CLK, CLK_FREQ = 100000000

BEGIN opb_uartlite
 PARAMETER INSTANCE = RS232_UART_1
 PARAMETER HW_VER = 1.00.b
 PARAMETER C_BAUDRATE = 115200
 PARAMETER C_DATA_BITS = 8
 PARAMETER C_ODD_PARITY = 1
 PARAMETER C_USE_PARITY = 0
 PARAMETER C_CLK_FREQ = 100000000
 PARAMETER C_BASEADDR = 0xd0ffdf00
 PARAMETER C_HIGHADDR = 0xd0ffdfff
 BUS_INTERFACE SOPB = opb0
 PORT OPB_Clk = sys_clk
 PORT RX = rs232tsh_rx
 PORT TX = rs232tsh_tx
END

BEGIN opb_clockcontroller
 PARAMETER INSTANCE = opb_clockcontroller_0
 PARAMETER HW_VER = 1.00.a
 PARAMETER C_BASEADDR = 0xd0ffdd00
 PARAMETER C_HIGHADDR = 0xd0ffddff
 BUS_INTERFACE SOPB = opb0
 PORT OPB_Clk = sys_clk
 PORT clk_psclk = usrclk_psclk
 PORT clk_psen = usrclk_psen
 PORT clk_psincdec = usrclk_psincdec
 PORT clk_clk = usr_clk
 PORT clk_reset = usrclk_reset
END

BEGIN ppc405
 PARAMETER INSTANCE = ppc405_0
 PARAMETER HW_VER = 2.00.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE DPLB = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE IPLB = linux_plb
 BUS_INTERFACE JTAGPPC = jtagppc_0_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT C405RSTCHIPRESETREQ = C405RSTCHIPRESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT C405RSTCORERESETREQ = C405RSTCORERESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT C405RSTSYSRESETREQ = C405RSTSYSRESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT EICC405EXTINPUTIRQ = EICC405EXTINPUTIRQ
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT RSTC405RESETCHIP = RSTC405RESETCHIP_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT RSTC405RESETCORE = RSTC405RESETCORE_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT RSTC405RESETSYS = RSTC405RESETSYS_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT CPMC405CLOCK = sys_clk3x
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLBCLK = sys_clk
END

#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN proc_sys_reset
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = reset_block_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_EXT_RESET_HIGH = 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Ext_Reset_In = net_vcc
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Slowest_sync_clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Chip_Reset_Req = C405RSTCHIPRESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Core_Reset_Req = C405RSTCORERESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT System_Reset_Req = C405RSTSYSRESETREQ_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Rstc405resetchip = RSTC405RESETCHIP_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Rstc405resetcore = RSTC405RESETCORE_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Rstc405resetsys = RSTC405RESETSYS_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Bus_Struct_Reset = sys_bus_reset_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Dcm_locked = dcm_0_lock
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN plb2opb_bridge
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = plb2opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.01.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_DCR_INTFCE = 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_RNG0_BASEADDR = 0xe0000000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_RNG0_HIGHADDR = 0xe0003fff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_NUM_ADDR_RNG = 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SPLB = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE MOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN plb_v34
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.02.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_DCR_INTFCE = 0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_EXT_RESET_HIGH = 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT SYS_Rst = sys_bus_reset_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN bram_block
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = plb_bram_if_cntlr_0_bram
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE PORTA = plb_bram_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN plb_bram_if_cntlr
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = plb_bram_if_cntlr_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER c_plb_clk_period_ps = 10000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER c_baseaddr = 0xffffc000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER c_highaddr = 0xffffffff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE PORTA = plb_bram_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SPLB = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_v20
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.10.b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_EXT_RESET_HIGH = 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT SYS_Rst = sys_bus_reset_linux
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_uart16550
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = RS232_UART
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.d
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_IS_A_16550 = 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0000000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe0001fff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT IP2INTC_Irpt = RS232_irq
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT ctsN = rs232linux_ctsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT rtsN = rs232linux_rtsN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT sin = rs232linux_rx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT sout = rs232linux_tx
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_intc
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_intc_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.c
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0002400
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe000241f
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Irq = EICC405EXTINPUTIRQ
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT Intr = RS232_irq & plb_ethernet_0_irq & opb_selectmap_0_irq
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_software_iic
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_software_iic_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0002500
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe00025ff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT SDA = smb_data
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT SCL = smb_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT smb_data = smb_data, DIR = IO
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT smb_clk = smb_clk, DIR = O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_hardware_spi
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_hardware_spi_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0002600
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe00026ff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER CLOCK_DIV  = 4
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT DI   = spi_di
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT DO   = spi_do
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT CS_N = spi_cs_n
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT CLK  = spi_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT spi_di   = spi_di,   DIR = O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT spi_do   = spi_do,   DIR = I
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT spi_cs_n = spi_cs_n, DIR = O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT spi_clk  = spi_clk,  DIR = O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN plb_psram
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = plb_psram_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0x00000000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0x00FFFFFF
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SPLB = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLB_Clk       = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_address  = psram_address
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_clk      = psram_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_adv_b    = psram_adv_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_cre      = psram_cre
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_ce_b     = psram_ce_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_oe_b     = psram_oe_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_we_b     = psram_we_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_lb_b     = psram_lb_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_ub_b     = psram_ub_b
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_dq       = psram_dq
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT pads_wait     = psram_wait
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_address  = psram_address, DIR = out, VEC = [22:0]
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_clk      = psram_clk, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_adv_b    = psram_adv_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_cre      = psram_cre, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_ce_b     = psram_ce_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_oe_b     = psram_oe_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_we_b     = psram_we_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_lb_b     = psram_lb_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_ub_b     = psram_ub_b, DIR = out
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_dq       = psram_dq, DIR = inout, VEC = [15:0]
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT psram_wait     = psram_wait, DIR = in
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN opb_selectmap
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = opb_selectmap_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.01.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xe0003000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xe00033ff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE SOPB = linux_opb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT CCLK = FPGA_CCLK
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT IP2INTC_Irpt = opb_selectmap_0_irq
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_D_O = SELECTMAP_D_I
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_D_I = SELECTMAP_D_O
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_RDWR_B = SELECTMAP_RDWR_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_CS_B = SELECTMAP_CS_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_INIT_B = SELECTMAP_INIT_B
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT FPGA0_DONE = net_vcc
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #BEGIN plb_ethernet
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER INSTANCE = plb_ethernet_0
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER HW_VER = 1.01.a
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_BASEADDR = 0xd0000000
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_HIGHADDR = 0xd0003fff
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PARAMETER C_DMA_PRESENT = 1
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # BUS_INTERFACE MSPLB = linux_plb
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PLB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT IP2INTC_Irpt = plb_ethernet_0_irq
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_tx_clk = ethernet_phy_tx_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_rx_clk = ethernet_phy_rx_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_crs = ethernet_phy_crs
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_dv = ethernet_phy_dv
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_rx_data = ethernet_phy_rxd
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_col = ethernet_phy_col
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_rx_er = ethernet_phy_rx_er
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_Mii_clk = ethernet_phy_mii_clk
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_tx_en = ethernet_phy_tx_en
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_tx_er = ethernet_phy_tx_er
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_tx_data = ethernet_phy_txd
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_rst_n = ethernet_phy_rst_n
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') # PORT PHY_Mii_data = ethernet_phy_mii_data
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #END
PORT phy_slew = net_vcc, VEC = [1:0], DIR = OUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_tx_clk = ethernet_phy_tx_clk, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_rx_clk = ethernet_phy_rx_clk, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_crs = ethernet_phy_crs, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_rx_dv = ethernet_phy_dv, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_rxd = ethernet_phy_rxd, VEC = [3:0], DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_col = ethernet_phy_col, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_rx_er = ethernet_phy_rx_er, DIR = IN
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_mii_clk = ethernet_phy_mii_clk, DIR = INOUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_tx_en = ethernet_phy_tx_en, DIR = OUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_tx_er = ethernet_phy_tx_er, DIR = OUT
PORT phy_reset_n = net_vcc , DIR = OUT #IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_reset_n = ethernet_phy_rst_n , DIR = OUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_txd = ethernet_phy_txd, VEC = [3:0], DIR = OUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #PORT phy_mii_data = ethernet_phy_mii_data, DIR = INOUT
#IF# strcmp(get(b,'type'),'xps_xsg') && strcmp(get(b,'ibob_linux'),'on') #
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))#BEGIN diffclk_buf
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))# PARAMETER INSTANCE = diffclk_buf_usr
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))# PORT Clkin_p = usrclk_in_p
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))# PORT Clkin_m = usrclk_in_n
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))# PORT Clkout  = usrclk_in
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))#END
#IF# strcmp(get(b,'type'),'xps_xsg') & ~isempty(strmatch('usr_clk', get(b,'clk_src'))) & ~isempty(strmatch(get(b,'gpioclk_grp'),{'zdok0', 'zdok1', 'mdr'}))#
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#BEGIN XAUI_infrastructure
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PARAMETER INSTANCE = xaui_infrastructure_0
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PARAMETER HW_VER = 2.00.b
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PORT brefclk_top_p      = brefclk_top_p
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PORT brefclk_top_m      = brefclk_top_m
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PORT brefclk_bottom_p   = brefclk_bottom_p
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )# PORT brefclk_bottom_m   = brefclk_bottom_m
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') ) && strcmp(get(b,'port'),'0')# BUS_INTERFACE XAUI_SYS0 = xaui_sys0
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') ) && strcmp(get(b,'port'),'1')# BUS_INTERFACE XAUI_SYS1 = xaui_sys1
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#END
#IF# ( strcmp(get(b,'type'),'xps_tengbe') | strcmp(get(b,'type'),'xps_xaui_v2') )#
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')#BEGIN diffclk_buf
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')# PARAMETER INSTANCE = diffclk_bref_clk_top
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')# PORT Clkin_p = bref_clk_top_p
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')# PORT Clkin_m = bref_clk_top_n
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')# PORT Clkout =  bref_clk_top
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')#END
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'0')#
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')#BEGIN diffclk_buf
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')# PARAMETER INSTANCE = diffclk_bref_clk_bottom
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')# PORT Clkin_p = bref_clk_bottom_p
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')# PORT Clkin_m = bref_clk_bottom_n
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')# PORT Clkout = bref_clk_bottom
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')#END
#IF# strcmp(get(b,'type'),'xps_xaui') && strcmp(get(b,'port'),'1')#
#IF# strcmp(get(b,'type'),'xps_adc')#BEGIN opb_adccontroller
#IF# strcmp(get(b,'type'),'xps_adc')# PARAMETER INSTANCE = opb_adccontroller_0
#IF# strcmp(get(b,'type'),'xps_adc')# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_adc')# PARAMETER C_BASEADDR = 0xd0ffde00
#IF# strcmp(get(b,'type'),'xps_adc')# PARAMETER C_HIGHADDR = 0xd0ffdeff
#IF# strcmp(get(b,'type'),'xps_adc')# BUS_INTERFACE SOPB = opb0
#IF# strcmp(get(b,'type'),'xps_adc')# PORT OPB_Clk = sys_clk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_adc3wire_clk = adc0_adc3wire_clk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_adc3wire_data = adc0_adc3wire_data
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_adc3wire_strobe = adc0_adc3wire_strobe
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_modepin = adc0_modepin
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_ddrb = adc0_ddrb
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_adc3wire_clk = adc1_adc3wire_clk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_adc3wire_data = adc1_adc3wire_data
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_adc3wire_strobe = adc1_adc3wire_strobe
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_modepin = adc1_modepin
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_ddrb = adc1_ddrb
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_psclk = adc0_psclk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_psen = adc0_psen
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_psincdec = adc0_psincdec
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc0')# PORT adc0_clk = adc0_clk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_psclk = adc1_psclk
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_psen = adc1_psen
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_psincdec = adc1_psincdec
#IF# strcmp(get(b,'type'),'xps_adc') && strcmp(get(b,'hw_adc'),'adc1')# PORT adc1_clk = adc1_clk
#IF# strcmp(get(b,'type'),'xps_adc')#END
#IF# strcmp(get(b,'type'),'xps_adc')#
#IF# strcmp(get(b,'type'),'xps_probe')#BEGIN chipscope_icon
#IF# strcmp(get(b,'type'),'xps_probe')# PARAMETER INSTANCE = chipscope_icon_0
#IF# strcmp(get(b,'type'),'xps_probe')# PARAMETER HW_VER = 1.00.a
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 1  # PARAMETER C_NUM_CONTROL_PORTS = 1
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 2  # PARAMETER C_NUM_CONTROL_PORTS = 2
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 3  # PARAMETER C_NUM_CONTROL_PORTS = 3
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 4  # PARAMETER C_NUM_CONTROL_PORTS = 4
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 5  # PARAMETER C_NUM_CONTROL_PORTS = 5
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 6  # PARAMETER C_NUM_CONTROL_PORTS = 6
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 7  # PARAMETER C_NUM_CONTROL_PORTS = 7
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 8  # PARAMETER C_NUM_CONTROL_PORTS = 8
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 9  # PARAMETER C_NUM_CONTROL_PORTS = 9
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 10 # PARAMETER C_NUM_CONTROL_PORTS = 10
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 11 # PARAMETER C_NUM_CONTROL_PORTS = 11
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 12 # PARAMETER C_NUM_CONTROL_PORTS = 12
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 13 # PARAMETER C_NUM_CONTROL_PORTS = 13
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 14 # PARAMETER C_NUM_CONTROL_PORTS = 14
#IF# strcmp(get(b,'type'),'xps_probe') && nb_objs.xps_probe == 15 # PARAMETER C_NUM_CONTROL_PORTS = 15
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 0  # PORT control0  = chipscope_icon_control0
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 1  # PORT control1  = chipscope_icon_control1
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 2  # PORT control2  = chipscope_icon_control2
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 3  # PORT control3  = chipscope_icon_control3
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 4  # PORT control4  = chipscope_icon_control4
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 5  # PORT control5  = chipscope_icon_control5
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 6  # PORT control6  = chipscope_icon_control6
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 7  # PORT control7  = chipscope_icon_control7
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 8  # PORT control8  = chipscope_icon_control8
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 9  # PORT control9  = chipscope_icon_control9
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 10 # PORT control10 = chipscope_icon_control10
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 11 # PORT control11 = chipscope_icon_control11
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 12 # PORT control12 = chipscope_icon_control12
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 13 # PORT control13 = chipscope_icon_control13
#IF# strcmp(get(b,'type'),'xps_probe') && get(b,'ila_number') == 14 # PORT control14 = chipscope_icon_control14
#IF# strcmp(get(b,'type'),'xps_probe')#END
#IF# strcmp(get(b,'type'),'xps_probe')#
